#!/bin/bash

function header {
  echo "$(tput setaf 2)$MABEN $(tput sgr0)"
}

function check {
	echo "$(tput setaf 3)Checking for update... $(tput sgr0)"
	cd $MABEN_PATH
	git fetch
	outdated="$(git status | grep behind -c)"
	if [ $outdated -ne 0 ]; then
		echo "$(tput setaf 1)maben is outdated. Use \"maben update\" command. $(tput sgr0)"
	else
		echo Already up-to-date.
		touch $FLAG
	fi
}


FLAG=$MABEN_PATH/maben_updated
LASTMOD_MAX=604800 # 7 days

if [ -z ${MABEN+x} ]; then
	echo "$(tput setaf 1)maben not initializated $(tput sgr0)"
	DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
	echo "Try exec: \"source ${DIR}/init\""
	exit 1
fi


while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    	header
    ;;
    -v|--version)
    	header
      	cd $MABEN_PATH
      	VDATE="$( git log -1 --format=%cd -1 --date=local)"
      	VERSION=`cat maben_version`
      	INIT_DATE=`cat maben_init_date`
      	echo " Version ${VERSION} at ${VDATE}"
      	echo " Run path $MABEN_PATH"
      	echo " Initiated ${INIT_DATE}"
    ;;
    update)
    	header
    	echo "$(tput setaf 3)Updating... $(tput sgr0)"
		cd $MABEN_PATH && git pull && touch $FLAG
		#unset MABEN && source $MABEN_PATH/init
		$MABEN_PATH/bin/dependencies
		if [ $? -eq 0 ]; then
			echo "$(tput setaf 2)Update was successful $(tput sgr0)"
			$MABEN_PATH/bin/postupdate
		else
			echo "$(tput setaf 1)update errors. Check for dependencies $(tput sgr0)"
		fi

    ;;
    --autocheck)
		if [ ! -f $FLAG ]; then
			touch $FLAG
		fi
		lastmod=$(( $(date +%s) - $(stat -c %Y $FLAG) ))
		if [ $lastmod -gt $LASTMOD_MAX ]; then
			header
			check
		fi
    ;;
    --check)
    	header
        check
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

